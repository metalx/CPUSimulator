LDA 1 0 63
STR 1 0 62
LDX 0 62

//INPUT
LDA 3 0 40	//IF STATUS == 0, BACK TO CHK
IN 0 0		//R0 = input
CHK 1 0		//R1 = STATUS
JZ 1 0 15	//IF STATUS == 0, JUMP TO STORE RO
LDA 2 0 10
MUL 0 2
STR 1 0 50
IN 0 0
AMR 0 0 50
JMP 0 7
STR 0 1 0	//M(X0) = R0 = input

LDA 1 1 1	//R1 = X0+1
STR 1 0 50	//M(50) = R1 = X0+1
LDX 0 50	//X0 = M(50)

SOB 3 0 6

//VECTOR ADD
LDA 2 0 63
AIR 2 20
STR 2 0 61

LDA 0 0 20

VADD 0 0 61

LDA 3 0 20
LDX 0 61
LDR 0 1 0
OUT 0 1

LDA 1 1 1	//R1 = X0+1
STR 1 0 50	//M(50) = R1 = X0+1
LDX 0 50	//X0 = M(50

SOB 3 0 27